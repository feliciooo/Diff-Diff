import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

public class LabExer6A {

    public static void main(String[] args) {
        String fileName = "C:\\Users\\user\\Desktop\\New folder\\minba\\jjj.txt";
        ArrayList<String> wordList = loadWordList(fileName);
        String selectedWord = selectWord(wordList);
        String hiddenWord = createHiddenWord(selectedWord);
        boolean isComplete = false;
        int attempts = 0;

        System.out.println("Welcome to Guess the Word!");
        System.out.println("The word has " + selectedWord.length() + " letters.");

        Scanner scanner = new Scanner(System.in);

        while (!isComplete) {
            System.out.println("\n" + hiddenWord);
            System.out.print("Guess a letter: ");
            String guess = scanner.nextLine().toUpperCase();

            if (selectedWord.contains(guess)) {
                hiddenWord = revealLetter(selectedWord, hiddenWord, guess);
                if (!hiddenWord.contains("?")) {
                    isComplete = true;
                }
            } else {
                System.out.println("Sorry, that letter is not in the word.");
            }

            attempts++;
        }

        System.out.println("\nCongratulations, you guessed the word in " + attempts + " attempts!");
        scanner.close();
    }

    public static ArrayList<String> loadWordList(String fileName) {
        ArrayList<String> wordList = new ArrayList<>();
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            String line;
            while ((line = br.readLine()) != null) {
                wordList.add(line.toUpperCase());
            }
        } catch (IOException e) {
            System.out.println("Error loading word list: " + e.getMessage());
        }
        return wordList;
    }

    public static String selectWord(ArrayList<String> wordList) {
        Random random = new Random();
        int index = random.nextInt(wordList.size());
        return wordList.get(index);
    }

    public static String createHiddenWord(String word) {
        StringBuilder hiddenWord = new StringBuilder();
        for (int i = 0; i < word.length(); i++) {
            hiddenWord.append("?");
        }
        return hiddenWord.toString();
    }

    public static String revealLetter(String word, String hiddenWord, String guess) {
        StringBuilder updatedWord = new StringBuilder(hiddenWord);
        for (int i = 0; i < word.length(); i++) {
            if (word.charAt(i) == guess.charAt(0)) {
                updatedWord.setCharAt(i, guess.charAt(0));
            }
        }
        return updatedWord.toString();
    }

}